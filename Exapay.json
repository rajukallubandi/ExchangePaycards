{
  "openapi": "3.0.1",
   "info": {
    "title": "Cards  API",
    "description": {
            "$ref": "./api.md"
        },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://tstapi.exchangapay/api/v1",
      "description": "API test environment"
    }
  ],
  "paths": {
    "/ApplyCard": {
  "post": {
    "tags": [
      "Cards"
    ],
    "summary": "ApplyCard",
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/DigitalBank.CardsService.Models.ApplyCard"
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DigitalBank.CardsService.Samples.ResponseDto"
            }
          }
        }
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "500": {
        "description": "Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "501": {
        "description": "Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      }
    }
  }
},
   "/Binding": {
  "post": {
    "tags": [
      "Cards"
    ],
    "summary": "Binding",
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/DigitalBank.CardsService.Models.BindCard"
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DigitalBank.CardsService.HyperPay.BindingResDto"
            }
          }
        }
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "500": {
        "description": "Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "501": {
        "description": "Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      }
    }
  }
},
     "/CardTopUp": {
   "post": {
     "tags": [
       "Cards"
     ],
     "summary": "CardTopUp",
     "requestBody": {
       "content": {
         "application/json": {
           "schema": {
             "$ref": "#/components/schemas/DigitalBank.CardsService.Samples.CardTopUpReqDto"
           }
         }
       }
     },
     "responses": {
       "200": {
         "description": "Success",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/DigitalBank.CardsService.Samples.ResponseDto"
             }
           }
         }
       },
       "400": {
         "description": "Bad Request",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "401": {
         "description": "Unauthorized",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "403": {
         "description": "Forbidden",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "404": {
         "description": "Not Found",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "500": {
         "description": "Server Error",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "501": {
         "description": "Server Error",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       }
     }
   }
 },
    "/CardFreeze": {
   "post": {
     "tags": [
       "Cards"
     ],
     "summary": "CardFreeze",
     "requestBody": {
       "content": {
         "application/json": {
           "schema": {
             "$ref": "#/components/schemas/DigitalBank.CardsService.Samples.CardReqDto"
           }
         }
       }
     },
     "responses": {
       "200": {
         "description": "Success",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/DigitalBank.CardsService.Samples.ResponseDto"
             }
           }
         }
       },
       "400": {
         "description": "Bad Request",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "401": {
         "description": "Unauthorized",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "403": {
         "description": "Forbidden",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "404": {
         "description": "Not Found",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "500": {
         "description": "Server Error",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "501": {
         "description": "Server Error",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       }
     }
   }
 },
 "/CardUnFreeze": {
   "post": {
     "tags": [
       "Cards"
     ],
     "summary": "CardUnFreeze",
     "requestBody": {
       "content": {
         "application/json": {
           "schema": {
             "$ref": "#/components/schemas/DigitalBank.CardsService.Samples.CardReqDto"
           }
         }
       }
     },
     "responses": {
       "200": {
         "description": "Success",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/DigitalBank.CardsService.Samples.ResponseDto"
             }
           }
         }
       },
       "400": {
         "description": "Bad Request",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "401": {
         "description": "Unauthorized",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "403": {
         "description": "Forbidden",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "404": {
         "description": "Not Found",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "500": {
         "description": "Server Error",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "501": {
         "description": "Server Error",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       }
     }
   }
 },
    "/CancelCard": {
  "post": {
    "tags": [
      "Cards"
    ],
    "summary": "CancelCard",
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/DigitalBank.CardsService.Samples.CardReqDto"
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DigitalBank.CardsService.Samples.ResponseDto"
            }
          }
        }
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "500": {
        "description": "Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "501": {
        "description": "Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      }
    }
  }
},
    "/EstimateCardTopUpFee": {
   "post": {
     "tags": [
       "Cards"
     ],
     "summary": "EstimateCardTopUpFee",
     "requestBody": {
       "content": {
         "application/json": {
           "schema": {
             "$ref": "#/components/schemas/DigitalBank.CardsService.Samples.EstimateCardTopUpFee"
           }
         }
       }
     },
     "responses": {
       "200": {
         "description": "Success",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/DigitalBank.CardsService.ProviderModels.EstimateTopupResponce"
             }
           }
         }
       },
       "400": {
         "description": "Bad Request",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "401": {
         "description": "Unauthorized",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "403": {
         "description": "Forbidden",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "404": {
         "description": "Not Found",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "500": {
         "description": "Server Error",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "501": {
         "description": "Server Error",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       }
     }
   }
 },
   "/CardDetails/{cardId}": {
   "get": {
     "tags": [
       "Cards"
     ],
     "summary": "CardDetails",
     "parameters": [
       {
         "name": "cardId",
         "in": "path",
         "required": true,
         "schema": {
           "type": "string",
           "description": "cardId(Must be between 1 and 36 bytes in UTF-8 encoding)"
         }
       }
     ],
     "responses": {
       "200": {
         "description": "Success",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/DigitalBank.CardsService.Samples.CardDetailsRespDto"
             }
           }
         }
       },
       "400": {
         "description": "Bad Request",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "401": {
         "description": "Unauthorized",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "403": {
         "description": "Forbidden",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "404": {
         "description": "Not Found",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "500": {
         "description": "Server Error",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "501": {
         "description": "Server Error",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       }
     }
   }
 },
     "/PinDetails/{cardId}": {
    "get": {
      "tags": [
        "Cards"
      ],
      "summary": "PinDetails",
      "parameters": [
        {
          "name": "cardId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "description": "cardId(Must be between 1 and 36 bytes in UTF-8 encoding)"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DigitalBank.CardsService.HyperPay.CardDetailResDto"
              }
            }
          }
        },
        "400": {
          "description": "Bad Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
              }
            }
          }
        },
        "404": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
              }
            }
          }
        },
        "500": {
          "description": "Server Error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
              }
            }
          }
        },
        "501": {
          "description": "Server Error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
              }
            }
          }
        }
      }
    }
  },
      "/CardBalance/{cardId}": {
    "get": {
      "tags": [
        "Cards"
      ],
      "summary": "CardBalance",
      "parameters": [
        {
          "name": "cardId",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "description": "cardId(Must be between 1 and 36 bytes in UTF-8 encoding)"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Success",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DigitalBank.CardsService.HyperPay.CustomerBalance"
              }
            }
          }
        },
        "400": {
          "description": "Bad Request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
              }
            }
          }
        },
        "401": {
          "description": "Unauthorized",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
              }
            }
          }
        },
        "403": {
          "description": "Forbidden",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
              }
            }
          }
        },
        "404": {
          "description": "Not Found",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
              }
            }
          }
        },
        "500": {
          "description": "Server Error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
              }
            }
          }
        },
        "501": {
          "description": "Server Error",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
              }
            }
          }
        }
      }
    }
  },
    "/MerchantInformation/Merchant": {
  "get": {
    "tags": [
      "MerchantInformation"
    ],
    "summary": "Merchant",
    "responses": {
      "200": {
        "description": "Success",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DigitalBank.CardsService.Models.CustomerInformation"
              }
            }
          }
        }
      },
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "500": {
        "description": "Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      },
      "501": {
        "description": "Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
            }
          }
        }
      }
    }
  }
},
     "/MerchantInformation/programdetails/{programid}": {
   "get": {
     "tags": [
       "MerchantInformation"
     ],
     "summary": "programdetails",
     "parameters": [
       {
         "name": "programid",
         "in": "path",
         "required": true,
         "schema": {
           "type": "string",
           "format": "uuid",
           "description": "programid(must be between 1 and 36 bytes in UTF-8 encoding)"
         }
       }
     ],
     "responses": {
       "200": {
         "description": "Success",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/DigitalBank.CardsService.Models.ProgramViewModel"
             }
           }
         }
       },
       "400": {
         "description": "Bad Request",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "401": {
         "description": "Unauthorized",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "403": {
         "description": "Forbidden",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "404": {
         "description": "Not Found",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "500": {
         "description": "Server Error",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       },
       "501": {
         "description": "Server Error",
         "content": {
           "application/json": {
             "schema": {
               "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorResponse"
             }
           }
         }
       }
     }
   }
 }
  },
  "components": {
    "schemas": {
       "DigitalBank.CardsService.HyperPay.BindingResDto": {
   "type": "object",
   "properties": {
     "taskId": {
       "type": "string",
       "nullable": true,
       "description": "taskId",
       "example": "23456"
     },
     "cardNo": {
       "type": "string",
       "nullable": true,
       "description": "cardNo",
       "example": "2345678"
     },
     "status": {
       "type": "string",
       "nullable": true,
       "description": "status",
       "example": "Active"
     },
     "remarks": {
       "type": "string",
       "nullable": true,
       "description": "remarks",
       "example": "cardactivationcompledted"
     }
   },
   "additionalProperties": false
 },
      "DigitalBank.CardsService.HyperPay.CardDetailResDto": {
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string",
            "nullable": true
          },
          "pin": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DigitalBank.CardsService.HyperPay.CustomerBalance": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "$ref": "#/components/schemas/DigitalBank.CardsService.HyperPay.customercards"
          },
          "msg": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
       "DigitalBank.CardsService.HyperPay.customercards": {
    "type": "object",
    "properties": {
      "available_balance": {
        "type": "string",
        "nullable": true,
        "description": "available_balance",
        "example": "100"
      },
      "card_currency": {
        "type": "string",
        "nullable": true,
        "description": "card_currency",
        "example": "100"
      },
      "card_number": {
        "type": "string",
        "nullable": true,
        "description": "card_number",
        "example": "2345678"
      },
      "card_type": {
        "type": "string",
        "nullable": true,
        "description": "card_type",
        "example": "OT"
      },
      "current_balance": {
        "type": "string",
        "nullable": true,
        "description": "current_balance",
        "example": "100"
      }
    },
    "additionalProperties": false
  },
      "DigitalBank.CardsService.Models.ApplyCard": {
   "required": [
     "programId"
   ],
   "type": "object",
   "properties": {
     "programId": {
       "minLength": 1,
       "type": "string",
       "description": "programId(must be between 1 and 36 bytes in UTF-8 encoding)"
     },
     "kyc": {
       "$ref": "#/components/schemas/DigitalBank.CardsService.Models.KYC"
     }
   },
   "additionalProperties": false
 },
       "DigitalBank.CardsService.Models.BalanceViewModel": {
   "type": "object",
   "properties": {
     "currency": {
       "type": "string",
       "nullable": true,
       "description": "currency",
       "example": "USD"
     },
     "currencyCode": {
       "type": "string",
       "nullable": true,
       "description": "currencyCode",
       "example": "USD"
     },
     "network": {
       "type": "string",
       "nullable": true,
       "description": "network",
       "example": "TRC-20"
     },
     "amount": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "amount",
       "example": "100"
     }
   },
   "additionalProperties": false
 },
      "DigitalBank.CardsService.Models.BindCard": {
   "required": [
     "cardNumber"
   ],
   "type": "object",
   "properties": {
     "taskId": {
       "type": "string",
       "nullable": true,
       "description": "taskId((must be between 1 and 36 bytes in UTF-8 encoding))",
       "example": "23456"
     },
     "cardNumber": {
       "minLength": 1,
       "type": "string",
       "description": "cardNumber(Card number must be at least 1 byte and no more than 19 bytes in UTF-8 encoding)",
       "example": "34567890"
     },
     "envelopeNo": {
       "type": "string",
       "nullable": true,
       "description": "envelopeNo(Envelope number can be null. If provided, it must be between 1 and 15 bytes in UTF-8 encoding)",
       "example": "8765456"
     },
     "kyc": {
       "$ref": "#/components/schemas/DigitalBank.CardsService.Models.KYC"
     }
   },
   "additionalProperties": false
 },
      "DigitalBank.CardsService.Models.CustomerInformation": {
   "type": "object",
   "properties": {
     "name": {
       "type": "string",
       "nullable": true,
       "description": "name",
       "example": "Jhon"
     },
     "email": {
       "type": "string",
       "nullable": true,
       "description": "name",
       "example": "Jhon@gmail.com"
     },
     "mobile": {
       "type": "string",
       "nullable": true,
       "description": "mobile",
       "example": "+91 9398889038"
     },
     "balances": {
       "type": "array",
       "items": {
         "$ref": "#/components/schemas/DigitalBank.CardsService.Models.BalanceViewModel"
       },
       "nullable": true
     },
     "programs": {
       "type": "array",
       "items": {
         "$ref": "#/components/schemas/DigitalBank.CardsService.Models.ProgramViewModel"
       },
       "nullable": true
     }
   },
   "additionalProperties": false
 },
      "DigitalBank.CardsService.Models.KYC": {
   "title": "KYC",
   "type": "object",
   "properties": {
     "firstname": {
       "type": "string",
       "nullable": true,
       "description": "firstname(Maximum 50 characters)",
       "example": "cameron"
     },
     "lastname": {
       "type": "string",
       "nullable": true,
       "description": "lastname(Maximum 50 characters)",
       "example": "green"
     },
     "gender": {
       "type": "integer",
       "format": "int32",
       "nullable": true,
       "description": "gender(1 Male; 2 Female)",
       "example": "1/male"
     },
     "dob": {
       "type": "string",
       "nullable": true,
       "description": "dob(format: yyyy-MM-dd)",
       "example": "2000-10-01"
     },
     "nationalityid": {
       "type": "string",
       "nullable": true,
       "description": "nationalityid",
       "example": "+91"
     },
     "email": {
       "type": "string",
       "nullable": true,
       "description": "email(Maximum 64 characters)",
       "example": "Green@gmail.com"
     },
     "mobilecode": {
       "type": "string",
       "nullable": true,
       "description": "mobilecode(Maximum 5 characters)",
       "example": "+91"
     },
     "mobile": {
       "type": "string",
       "nullable": true,
       "description": "mobile(Minimum 6 characters and Maximum 11 characters)",
       "example": "9398889038"
     },
     "address": {
       "type": "string",
       "nullable": true,
       "description": "address(Maximum 256 characters)",
       "example": "hyderbad"
     },
     "town": {
       "type": "string",
       "nullable": true,
       "description": "town(Maximum 50 characters)",
       "example": "Srnagar"
     },
     "city": {
       "type": "string",
       "nullable": true,
       "description": "city(Maximum 50 characters)",
       "example": "city"
     },
     "state": {
       "type": "string",
       "nullable": true,
       "description": "state(Maximum 100 characters)",
       "example": "Ts"
     },
     "zipcode": {
       "type": "string",
       "nullable": true,
       "description": "zipcode(Maximum 20 characters Same set as mobile no country code)",
       "example": "500038"
     },
     "countryid": {
       "type": "string",
       "nullable": true,
       "description": "countryid(Maximum 5 characters)",
       "example": "+91"
     },
     "countryisothree": {
       "type": "string",
       "nullable": true,
       "description": "countryisothree",
       "example": "countryisothree"
     },
     "emergencycontact": {
       "type": "string",
       "nullable": true,
       "description": "emergencycontact(Maximum 255 characters)",
       "example": "98709870987"
     },
     "doctype": {
       "type": "integer",
       "format": "int32",
       "nullable": true,
       "description": "doctype(1 Passport 2 Identity no (Currently we only support Passport))",
       "example": "1"
     },
     "docid": {
       "type": "string",
       "nullable": true,
       "description": "docid(Maximum 128 characters)",
       "example": "1"
     },
     "frontdoc": {
       "type": "string",
       "nullable": true,
       "description": "frontdoc(Encoded into base64 format. The size of this field should be less than 2MB. Support：jpg,jpeg,png)",
       "example": "frontimg"
     },
     "backdoc": {
       "type": "string",
       "nullable": true,
       "description": "backdoc(Encoded into base64 format. The size of this field should be less than 2MB. Support：jpg,jpeg,png)",
       "example": "backimg"
     },
     "docexpiredate": {
       "type": "string",
       "nullable": true,
       "description": "docexpiredate(Maximum 16 characters; format: yyyy-MM-dd))",
       "example": "2025-10-01"
     },
    "docneveexpire": {
       "type": "integer",
       "format": "int32",
       "description": "docneveexpire(Is the Document permanent; 1 is permanent，and then ignore the doc_expire_date filed; 0 is not permanent，and then the doc_expire_date filed must not Empty)",
       "example": "2025-10-01"
     },
     "handholdidphoto": {
       "type": "string",
       "nullable": true,
       "description": "handholdidphoto(Encoded into base64 format. The size of this field should be less than 1 MB. Support：jpg,jpeg,png)",
       "example": "10-01-2025"
     },
     "biomatric": {
       "type": "string",
       "nullable": true,
       "description": "biomatric(Base64-encoded fingerprint)",
       "example": "Finger"
     },
     "photo": {
       "type": "string",
       "nullable": true,
       "description": "photo(Encoded into base64 format. The size of this field should be less than 1 MB. Support：jpg,jpeg,png)",
       "example": "img"
     },
     "signimage": {
       "type": "string",
       "nullable": true,
       "description": "signimage(Photo of signature；Encoded into base64 format. The size of this field should be less than 1 MB. Support：jpg,jpeg,png)",
       "example": "sigimg"
     }
   },
   "additionalProperties": false
 },
     "DigitalBank.CardsService.Models.ProgramViewModel": {
       "title":"Programs"
   "type": "object",
   "properties": {
     "programId": {
       "type": "string",
       "format": "uuid",
       "description": "programId",
       "example": "23456"
     },
     "bin": {
       "type": "integer",
       "format": "int32",
       "nullable": true,
       "description": "bin",
       "example": "3456"
     },
     "name": {
       "type": "string",
       "nullable": true,
       "description": "name",
       "example": "Card"
     },
     "currency": {
       "type": "string",
       "nullable": true,
       "description": "currency",
       "example": "USD"
     },
     "type": {
       "type": "string",
       "nullable": true,
       "description": "type",
       "example": "type"
     },
     "consumptionMethod": {
       "type": "string",
       "nullable": true,
       "description": "consumptionMethod",
       "example": "yes"
     },
     "isoCountryName": {
       "type": "string",
       "nullable": true,
       "description": "isoCountryName",
       "example": "yes"
     },
     "cardFee": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "cardFee",
       "example": "100"
     },
     "cardOpeningFee": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "cardOpeningFee",
       "example": "10"
     },
     "firstRechargeAmount": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "firstRechargeAmount",
       "example": "10"
     },
     "cancellationFeeMin": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "cancellationFeeMin",
       "example": "10"
     },
     "cancellationFeeMax": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "cancellationFeeMax",
       "example": "10"
     },
     "freightFee": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "freightFee",
       "example": "10"
     },
     "rechargeFeeMin": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "rechargeFeeMin",
       "example": "10"
     },
     "rechargeFeeMax": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "rechargeFeeMax",
       "example": "rechargeFeeMax"
     },
     "transactionFee": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "transactionFee",
       "example": "10"
     },
     "atmWithdrawalFee": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "atmWithdrawalFee",
       "example": "10"
     },
     "maintenanceFee": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "maintenanceFee",
       "example": "10"
     },
     "atmBalanceInquiryFee": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "atmBalanceInquiryFee",
       "example": "10"
     },
     "monthlyRechargeLimit": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "monthlyRechargeLimit",
       "example": "10"
     },
     "dailyRechargeLimit": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "dailyRechargeLimit",
       "example": "10"
     },
     "singleRechargeLimit": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "singleRechargeLimit",
       "example": "10"
     },
     "perPaymentLimit": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "perPaymentLimit",
       "example": "10"
     },
     "atmDailyWithdrawalLimit": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "atmDailyWithdrawalLimit",
       "example": "10"
     },
     "spendingLimit": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "spendingLimit",
       "example": "10"
     },
     "reviewTime": {
       "type": "string",
       "nullable": true,
       "description": "reviewTime",
       "example": "1hrs"
     },
     "cardState": {
       "type": "string",
       "nullable": true,
       "description": "cardState",
       "example": "Submit"
     },
     "note": {
       "type": "string",
       "nullable": true,
       "description": "note",
       "example": "Submit"
     },
     "remarks": {
       "type": "string",
       "nullable": true,
       "description": "remarks",
       "example": "cardactive"
     },
     "isKycRequired": {
       "type": "string",
       "nullable": true,
       "description": "isKycRequired",
       "example": "yes"
     },
     "supportedOperationTypes": {
       "type": "string",
       "nullable": true,
       "description": "supportedOperationTypes",
       "example": "freeze etc"
     },
     "cardImage": {
       "type": "string",
       "nullable": true,
       "description": "cardImage",
       "example": "cardImage"
     },
     "supportedPlatforms": {
       "type": "string",
       "nullable": true,
       "description": "supportedPlatforms",
       "example": "Gpay"
     },
     "topUpTokens": {
       "type": "array",
       "items": {
         "$ref": "#/components/schemas/DigitalBank.CardsService.Models.TopUpTokens"
       },
       "nullable": true
     }
   },
   "additionalProperties": false
 },
      "DigitalBank.CardsService.Models.TopUpTokens": {
   "type": "object",
   "properties": {
     "token": {
       "type": "string",
       "nullable": true,
       "description": "token",
       "example": "3a1084c5-fec2-8f08-243d-caa95951b6fd"
     },
     "network": {
       "type": "string",
       "nullable": true,
       "description": "network",
       "example": "TRC-20"
     },
     "address": {
       "type": "string",
       "nullable": true,
       "description": "address",
       "example": "Hyderbad"
     }
   },
   "additionalProperties": false
 },
       "DigitalBank.CardsService.ProviderModels.EstimateTopupResponce": {
   "type": "object",
   "properties": {
     "publicKey": {
       "type": "string",
       "nullable": true,
       "description": "publicKey",
       "example": "3a1084c5-fec2-8f08-243d-caa95951b6fd"
     },
     "privateKey": {
       "type": "string",
       "nullable": true,
       "description": "privateKey",
       "example": "3a1084c5-fec2-8f08-243d-caa95951b6fd"
     },
     "apiKey": {
       "type": "string",
       "nullable": true,
       "description": "apiKey",
       "example": "3a1084c5-fec2-8f08-243d-caa95951b6fd"
     },
     "kid": {
       "type": "string",
       "nullable": true,
       "description": "kid",
       "example": "3a1084c5"
     },
     "cardId": {
       "type": "string",
       "nullable": true,
       "description": "cardId",
       "example": "3a1084c5"
     },
     "amount": {
       "type": "string",
       "nullable": true,
       "description": "amount",
       "example": "100"
     },
     "fee": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "fee",
       "example": "100"
     },
     "receiveAmount": {
       "type": "number",
       "format": "double",
       "nullable": true,
       "description": "receiveAmount",
       "example": "100"
     }
   },
   "additionalProperties": false
 },
       "DigitalBank.CardsService.Samples.CardDetailsRespDto": {
   "type": "object",
   "properties": {
     "cardNumber": {
       "type": "string",
       "nullable": true,
       "description": "cardNumber",
       "example": "23456789"
     },
     "cvv": {
       "type": "string",
       "nullable": true,
       "description": "cvv",
       "example": "234"
     },
     "expirationDate": {
       "type": "string",
       "nullable": true,
       "description": "expirationDate",
       "example": "10-01-2025"
     }
   },
   "additionalProperties": false
 },
      "DigitalBank.CardsService.Samples.CardReqDto": {
  "required": [
    "cardId"
  ],
  "type": "object",
  "properties": {
    "cardId": {
      "minLength": 1,
      "type": "string",
      "description": "cardId(Must be between 1 and 36 bytes in UTF-8 encoding)",
      "example": "234567"
    }
  },
  "additionalProperties": false
},
       "DigitalBank.CardsService.Samples.CardTopUpReqDto": {
   "required": [
     "amount",
     "cardId"
   ],
   "type": "object",
   "properties": {
     "publicKey": {
       "type": "string",
       "nullable": true,
       "description": "publicKey(Must be between 1 and 64 bytes in UTF-8 encoding)",
       "example": "3a1084c5-fec2-8f08-243d-caa95951b6fd"
     },
     "privateKey": {
       "type": "string",
       "nullable": true,
       "description": "privateKey(Must be between 1 and 64 bytes in UTF-8 encoding)",
       "example": "3a1084c5-fec2-8f08-243d-caa95951b6fd"
     },
     "apiKey": {
       "type": "string",
       "nullable": true,
       "description": "apiKey(Must be between 1 and 64 bytes in UTF-8 encoding)",
       "example": "3a1084c5-fec2-8f08-243d-caa95951b6fd"
     },
     "kid": {
       "type": "string",
       "nullable": true,
       "description": "kid(Must be between 1 and 36 bytes in UTF-8 encoding)",
       "example": "fec2-8f08d"
     },
     "cardId": {
       "minLength": 1,
       "type": "string",
       "description": "cardId(Must be between 1 and 36 bytes in UTF-8 encoding)",
       "example": "fec2-8f08d"
     },
     "amount": {
       "minLength": 1,
       "type": "string",
       "description": "amount(Must be between 1 and 10 bytes in UTF-8 encoding)",
       "example": "100"
     },
     "cardNo": {
       "type": "string",
       "nullable": true,
       "description": "cardNo(Must be between 1 and 19 bytes in UTF-8 encoding)",
       "example": "21234534"
     },
     "referenceId": {
       "type": "string",
       "nullable": true,
       "description": "referenceId(Must be between 1 and 36 bytes in UTF-8 encoding)",
       "example": "9890987"
     }
   },
   "additionalProperties": false
 },
     "DigitalBank.CardsService.Samples.EstimateCardTopUpFee": {
  "type": "object",
  "properties": {
    "publicKey": {
      "type": "string",
      "nullable": true,
      "description": "publicKey(Must be between 1 and 64 bytes in UTF-8 encoding)",
      "example": "3a1084c5-fec2-8f08-243d-caa95951b6fd"
    },
    "privateKey": {
      "type": "string",
      "nullable": true,
      "description": "privateKey(Must be between 1 and 64 bytes in UTF-8 encoding)",
      "example": "3a1084c5-fec2-8f08-243d-caa95951b6fd"
    },
    "apiKey": {
      "type": "string",
      "nullable": true,
      "description": "apiKey(Must be between 1 and 64 bytes in UTF-8 encoding)",
      "example": "3a1084c5-fec2-8f08-243d-caa95951b6fd"
    },
    "kid": {
      "type": "string",
      "nullable": true,
      "description": "kid(Must be between 1 and 36 bytes in UTF-8 encoding)",
      "example": "fec2-8f08d"
    },
    "cardId": {
      "minLength": 1,
      "type": "string",
      "description": "cardId(Must be between 1 and 36 bytes in UTF-8 encoding)",
      "example": "fec2-8f08d"
    },
    "amount": {
      "minLength": 1,
      "type": "string",
      "description": "amount(Must be between 1 and 10 bytes in UTF-8 encoding)",
      "example": "100"
    }
  },
  "additionalProperties": false
},
      "DigitalBank.CardsService.Samples.ResponseDto": {
  "type": "object",
  "properties": {
    "taskId": {
      "type": "string",
      "nullable": true,
      "description": "taskId",
      "example": "23456"
    },
    "referenceId": {
      "type": "string",
      "nullable": true,
      "description": "referenceId",
      "example": "2343"
    },
    "status": {
      "type": "string",
      "nullable": true,
      "description": "status",
      "example": "Active"
    },
    "remarks": {
      "type": "string",
      "nullable": true,
      "description": "remarks",
      "example": "CarsInProgress"
    }
  },
  "additionalProperties": false
},
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto": {
        "type": "object",
        "properties": {
          "grantedPolicies": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto": {
        "type": "object",
        "properties": {
          "localization": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto"
          },
          "auth": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto"
          },
          "setting": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto"
          },
          "currentUser": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto"
          },
          "features": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto"
          },
          "globalFeatures": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationGlobalFeatureConfigurationDto"
          },
          "multiTenancy": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto"
          },
          "currentTenant": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto"
          },
          "timing": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto"
          },
          "clock": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto"
          },
          "objectExtensions": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto"
          },
          "extraProperties": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto": {
        "type": "object",
        "properties": {
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationGlobalFeatureConfigurationDto": {
        "type": "object",
        "properties": {
          "enabledFeatures": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto": {
        "type": "object",
        "properties": {
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nullable": true
          },
          "resources": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto"
            },
            "nullable": true
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Volo.Abp.Localization.LanguageInfo"
            },
            "nullable": true
          },
          "currentCulture": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto"
          },
          "defaultResourceName": {
            "type": "string",
            "nullable": true
          },
          "languagesMap": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Volo.Abp.NameValue"
              }
            },
            "nullable": true
          },
          "languageFilesMap": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Volo.Abp.NameValue"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationDto": {
        "type": "object",
        "properties": {
          "resources": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto"
            },
            "nullable": true
          },
          "currentCulture": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationResourceDto": {
        "type": "object",
        "properties": {
          "texts": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true
          },
          "baseResources": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto": {
        "type": "object",
        "properties": {
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto": {
        "type": "object",
        "properties": {
          "kind": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "englishName": {
            "type": "string",
            "nullable": true
          },
          "threeLetterIsoLanguageName": {
            "type": "string",
            "nullable": true
          },
          "twoLetterIsoLanguageName": {
            "type": "string",
            "nullable": true
          },
          "isRightToLeft": {
            "type": "boolean"
          },
          "cultureName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "nativeName": {
            "type": "string",
            "nullable": true
          },
          "dateTimeFormat": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto": {
        "type": "object",
        "properties": {
          "isAuthenticated": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "tenantId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "impersonatorUserId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "impersonatorTenantId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "impersonatorUserName": {
            "type": "string",
            "nullable": true
          },
          "impersonatorTenantName": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "surName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "emailVerified": {
            "type": "boolean"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberVerified": {
            "type": "boolean"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "sessionId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto": {
        "type": "object",
        "properties": {
          "calendarAlgorithmType": {
            "type": "string",
            "nullable": true
          },
          "dateTimeFormatLong": {
            "type": "string",
            "nullable": true
          },
          "shortDatePattern": {
            "type": "string",
            "nullable": true
          },
          "fullDateTimePattern": {
            "type": "string",
            "nullable": true
          },
          "dateSeparator": {
            "type": "string",
            "nullable": true
          },
          "shortTimePattern": {
            "type": "string",
            "nullable": true
          },
          "longTimePattern": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone": {
        "type": "object",
        "properties": {
          "timeZoneName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto": {
        "type": "object",
        "properties": {
          "properties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto"
            },
            "nullable": true
          },
          "configuration": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto"
            },
            "nullable": true
          },
          "localizationResource": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto": {
        "type": "object",
        "properties": {
          "isAvailable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto": {
        "type": "object",
        "properties": {
          "onGet": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto"
          },
          "onCreate": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto"
          },
          "onUpdate": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto": {
        "type": "object",
        "properties": {
          "isAvailable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto": {
        "type": "object",
        "properties": {
          "isAvailable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto": {
        "type": "object",
        "properties": {
          "typeSimple": {
            "type": "string",
            "nullable": true
          },
          "config": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "typeSimple": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto"
          },
          "api": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto"
          },
          "ui": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto"
            },
            "nullable": true
          },
          "configuration": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "defaultValue": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto": {
        "type": "object",
        "properties": {
          "onTable": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto"
          },
          "onCreateForm": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto"
          },
          "onEditForm": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto"
          },
          "lookup": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto": {
        "type": "object",
        "properties": {
          "isVisible": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "nullable": true
          },
          "resultListPropertyName": {
            "type": "string",
            "nullable": true
          },
          "displayPropertyName": {
            "type": "string",
            "nullable": true
          },
          "valuePropertyName": {
            "type": "string",
            "nullable": true
          },
          "filterParamName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto": {
        "type": "object",
        "properties": {
          "isVisible": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "resource": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto": {
        "type": "object",
        "properties": {
          "entities": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto"
            },
            "nullable": true
          },
          "configuration": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto": {
        "type": "object",
        "properties": {
          "modules": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto"
            },
            "nullable": true
          },
          "enums": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone": {
        "type": "object",
        "properties": {
          "iana": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone"
          },
          "windows": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto": {
        "type": "object",
        "properties": {
          "timeZone": {
            "$ref": "#/components/schemas/Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone": {
        "type": "object",
        "properties": {
          "timeZoneId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "isAvailable": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.Modeling.ActionApiDescriptionModel": {
        "type": "object",
        "properties": {
          "uniqueName": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "httpMethod": {
            "type": "string",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "supportedVersions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "parametersOnMethod": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel"
            },
            "nullable": true
          },
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Volo.Abp.Http.Modeling.ParameterApiDescriptionModel"
            },
            "nullable": true
          },
          "returnValue": {
            "$ref": "#/components/schemas/Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel"
          },
          "allowAnonymous": {
            "type": "boolean",
            "nullable": true
          },
          "implementFrom": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel": {
        "type": "object",
        "properties": {
          "modules": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Volo.Abp.Http.Modeling.ModuleApiDescriptionModel"
            },
            "nullable": true
          },
          "types": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Volo.Abp.Http.Modeling.TypeApiDescriptionModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.Modeling.ControllerApiDescriptionModel": {
        "type": "object",
        "properties": {
          "controllerName": {
            "type": "string",
            "nullable": true
          },
          "controllerGroupName": {
            "type": "string",
            "nullable": true
          },
          "isRemoteService": {
            "type": "boolean"
          },
          "isIntegrationService": {
            "type": "boolean"
          },
          "apiVersion": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "interfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel"
            },
            "nullable": true
          },
          "actions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Volo.Abp.Http.Modeling.ActionApiDescriptionModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "methods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Volo.Abp.Http.Modeling.InterfaceMethodApiDescriptionModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.Modeling.InterfaceMethodApiDescriptionModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "parametersOnMethod": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel"
            },
            "nullable": true
          },
          "returnValue": {
            "$ref": "#/components/schemas/Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "typeAsString": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "typeSimple": {
            "type": "string",
            "nullable": true
          },
          "isOptional": {
            "type": "boolean"
          },
          "defaultValue": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.Modeling.ModuleApiDescriptionModel": {
        "type": "object",
        "properties": {
          "rootPath": {
            "type": "string",
            "nullable": true
          },
          "remoteServiceName": {
            "type": "string",
            "nullable": true
          },
          "controllers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Volo.Abp.Http.Modeling.ControllerApiDescriptionModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.Modeling.ParameterApiDescriptionModel": {
        "type": "object",
        "properties": {
          "nameOnMethod": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "jsonName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "typeSimple": {
            "type": "string",
            "nullable": true
          },
          "isOptional": {
            "type": "boolean"
          },
          "defaultValue": {
            "nullable": true
          },
          "constraintTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "bindingSourceId": {
            "type": "string",
            "nullable": true
          },
          "descriptorName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.Modeling.PropertyApiDescriptionModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "jsonName": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "typeSimple": {
            "type": "string",
            "nullable": true
          },
          "isRequired": {
            "type": "boolean"
          },
          "minLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "minimum": {
            "type": "string",
            "nullable": true
          },
          "maximum": {
            "type": "string",
            "nullable": true
          },
          "regex": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "typeSimple": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.Modeling.TypeApiDescriptionModel": {
        "type": "object",
        "properties": {
          "baseType": {
            "type": "string",
            "nullable": true
          },
          "isEnum": {
            "type": "boolean"
          },
          "enumNames": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "enumValues": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "genericArguments": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Volo.Abp.Http.Modeling.PropertyApiDescriptionModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.RemoteServiceErrorInfo": {
         "title": "RemoteServiceErrorInfo",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "details": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceValidationErrorInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.RemoteServiceErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/Volo.Abp.Http.RemoteServiceErrorInfo"
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Http.RemoteServiceValidationErrorInfo": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "members": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.Localization.LanguageInfo": {
        "type": "object",
        "properties": {
          "cultureName": {
            "type": "string",
            "nullable": true
          },
          "uiCultureName": {
            "type": "string",
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "twoLetterISOLanguageName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Volo.Abp.NameValue": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}